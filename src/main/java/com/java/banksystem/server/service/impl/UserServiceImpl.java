package com.java.banksystem.server.service.impl;import com.java.banksystem.server.entity.User;import com.java.banksystem.server.exception.UserNotFoundException;import com.java.banksystem.server.exception.UsernameAlreadyExistException;import com.java.banksystem.server.mapper.UserMapper;import com.java.banksystem.server.repository.AccountRepository;import com.java.banksystem.server.repository.UserRepository;import com.java.banksystem.server.service.UserService;import com.java.banksystem.web.dto.AccountDto;import com.java.banksystem.web.dto.UserDto;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Service@Transactionalpublic class UserServiceImpl implements UserService {    private final UserRepository userRepository;    public UserServiceImpl(UserRepository userRepository) {        this.userRepository = userRepository;    }    @Override    public UserDto createUser(UserDto userDto) {        if (userRepository.existsByName(userDto.getName())) {            throw new UsernameAlreadyExistException("Username already exists: " + userDto.getName());        }        userRepository.save(UserMapper.INSTANCE.userDtoToUser(userDto));        return userDto;    }    @Override    @Transactional(readOnly = true)    public List<UserDto> getAllUsers() {        return UserMapper.INSTANCE.userListToUserDto(userRepository.findAll());    }    @Override    @Transactional(readOnly = true)    public UserDto getUserById(Long id) {        User user = userRepository.findById(id).orElseThrow(                () -> new UserNotFoundException("User with ID: " + id + " not found"));        return UserMapper.INSTANCE.userToUserDto(user);    }    @Override    public void deleteUser(Long id) {        User user = userRepository.findById(id).orElseThrow(                () -> new UserNotFoundException("User with ID: " + id + " not found"));        userRepository.delete(user);    }}